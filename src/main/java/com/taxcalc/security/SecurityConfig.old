//package com.taxcalc.security;
//
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.config.annotation.web.builders.HttpSecurity;
//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
//import org.springframework.security.web.SecurityFilterChain;
//
//@Configuration
//@EnableWebSecurity
//public class SecurityConfig {

//    @Bean
//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
//        http
//                .csrf(csrf -> csrf.disable()) // Desabilita CSRF (necessário para APIs REST)
//                .authorizeHttpRequests(auth -> auth
//                        // Libera endpoints públicos (Swagger e registro/login de usuários)
//                        .requestMatchers(
//                                "/swagger-ui/**",       // Interface do Swagger
//                                "/v3/api-docs/**",      // Documentação OpenAPI
//                                "/swagger-resources/**", // Recursos do Swagger
//                                "/user/register",       // Registro de usuários
//                                "/user/login"           // Login de usuários
//                        ).permitAll()
//
//                        // Endpoints protegidos por papel ADMIN
//                        .requestMatchers("/tipos", "/tipos/**").hasRole("ADMIN") // Gestão de tipos de impostos
//                        .requestMatchers("/calculo").hasRole("ADMIN")            // Cálculo de impostos
//
//                        // Todos os outros endpoints exigem autenticação
//                        .anyRequest().authenticated()
//                );
//
//        return http.build();
//    }

//    @Bean
//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
//        http
//                .authorizeHttpRequests((requests) -> requests
//                        .requestMatchers("/v3/api-docs", "/swagger-resources/**", "/swagger-ui.html", "/webjars/**", "/swagger-ui/**").permitAll()
//                        .anyRequest().authenticated()
//                )
//                .csrf(csrf -> csrf.disable()); // Desabilita CSRF para facilitar o acesso ao Swagger
//        return http.build();
//    }
//
//}



colocar no swager config

//@SecurityScheme(
//        name = "BearerAuth",
//        type = SecuritySchemeType.HTTP,
//        scheme = "bearer",
//        bearerFormat = "JWT"
//)